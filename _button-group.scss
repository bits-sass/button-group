/* ==========================================================================
   Button group
   ========================================================================== */

/**
 * Create a visual connection between UI actions that belong together.
 * Must only contain `ButtonGroup-item` objects as children.
 *
 * --------------
 * Example usage:
 *
 * <div class="ButtonGroup">
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Dashboard</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Account</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Logout</a>
 *   </div>
 * </div>
 */

/* Variables
   ========================================================================== */

/**
 * Bits.sass components namespace
 */

$bits-components-ns: 'bits-' !default; /* 1 */

/* Component
   ========================================================================== */

/**
 * Button group
 *
 * 1. Remove inter-child whitespace for all non-monospace font-families.
 * 2. Protect against WebKit bug with optimizelegibility
 * 3. Prevent wrapping across multiple lines.
 */

.#{$bits-components-ns}ButtonGroup {
  display: inline-block;
  vertical-align: middle;

  letter-spacing: -0.31em; /* 1 */
  text-rendering: optimizespeed; /* 2 */
  white-space: nowrap; /* 3 */
}

/**
 * Hack to remove inter-child whitespace in Opera for Windows. All other
 * supported browsers will drop the ruleset.
 */

.opera:-o-prefocus,
.#{$bits-components-ns}ButtonGroup {
  word-spacing: -0.43em;
}

/* Descendants
   ========================================================================== */

/**
 * Button group item
 *
 * 1. Ensure that adjacent button borders slide over each other. Must match the
 *    value of the button border width.
 * 2. Provide a consistent vertical alignment and avoid vertical whitespace in
 *    the component.
 * 3. Reset the text defaults altered in `ButtonGroup`.
 */

.#{$bits-components-ns}ButtonGroup-item {
  display: inline-block;
  margin-left: -1px; /* 1 */
  vertical-align: top; /* 2 */

  letter-spacing: normal; /* 3 */
  text-rendering: auto; /* 3 */
  word-spacing: normal; /* 3 */

  &:first-child {
    margin-left: 0;
  }
}

/**
 * Ensure that interactions with a button make it sit on top of other buttons
 * in the group.
 */

.#{$bits-components-ns}ButtonGroup-item {
  > .#{$bits-components-ns}Button {
    &:hover,
    &:focus,
    &:active,
    &.is-pressed {
      z-index: 1;
    }
  }
}

/* Component modifiers
   ========================================================================== */

/**
 * Vertically stacked buttons
 */

.#{$bits-components-ns}ButtonGroup--vertical {
  > .#{$bits-components-ns}ButtonGroup-item {
    display: block;
    margin-top: -1px;
    margin-left: 0;
  }

  .#{$bits-components-ns}Button {
    display: block;
    width: 100%;
  }
}

/* Misc
   ========================================================================== */

/**
 * Remove the `border-radius` on adjacent sides of Button descendants.
 * Apply to default, horizontal button group.
 *
 * We can rely on these pseudo-class selectors because one of the ButtonGroup
 * requirements is that it only contains ButtonGroup-item as children.
 *
 * All browsers that support `border-radius` also support `:not()`.
 */

.#{$bits-components-ns}ButtonGroup:not(.ButtonGroup--vertical) {
  .#{$bits-components-ns}ButtonGroup-item {
    &:not(:first-child):not(:last-child) {
      > .#{$bits-components-ns}Button {
        border-radius: 0;
      }
    }

    &:first-child:not(:only-child) {
      > .#{$bits-components-ns}Button {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
      }
    }

    &:last-child:not(:only-child) {
      > .#{$bits-components-ns}Button {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
      }
    }
  }
}

/**
 * Appropriate removal of `border-radius` for vertically stacked buttons.
 */

.#{$bits-components-ns}ButtonGroup--vertical {
  .#{$bits-components-ns}ButtonGroup-item {
    &:not(:first-child):not(:last-child) {
      > .#{$bits-components-ns}Button {
        border-radius: 0;
      }
    }

    &:first-child:not(:only-child) {
      > .#{$bits-components-ns}Button {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    &:last-child:not(:only-child) {
      > .#{$bits-components-ns}Button {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }
  }
}